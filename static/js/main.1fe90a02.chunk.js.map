{"version":3,"sources":["components/Typer.js","resources/hanguler-web.PNG","components/AboutMe.js","components/Card.js","resources/twitter.PNG","resources/mask-detector.png","resources/auto-schedule-updater.PNG","components/Project.js","components/Contact.js","App.js","index.js"],"names":["TypingEffect","text","cursorRenderer","cursor","speed","eraseSpeed","eraseDelay","typingDelay","displayTextRenderer","i","split","map","char","key","AboutMe","dots","infinite","slidesToShow","slidesToScroll","className","src","hanguler","Component","useStyles","makeStyles","root","maxWidth","ImageCard","img","title","period","tech","role","description","link","classes","Card","CardActionArea","CardMedia","component","alt","height","image","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","href","Project","scheduler","twitter","mask","Contact","App","Typer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe90a02.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\nconst TypingEffect = () => {\r\n  return (\r\n      <ReactTypingEffect\r\n        text={[\"Hi, this is Gyuri\", \"still dreaming of a better world\"]}\r\n        cursorRenderer={cursor => <h1>{cursor}</h1>}\r\n        speed=\"100\"\r\n        eraseSpeed=\"100\"\r\n        eraseDelay=\"2000\"\r\n        typingDelay=\"2000\"\r\n        displayTextRenderer={(text, i) => {\r\n          return (\r\n            <h1>\r\n              {text.split('').map((char, i) => {\r\n                const key = `${i}`;\r\n                return (\r\n                  <span\r\n                    key={key}\r\n                  >{char}</span>\r\n                );\r\n              })}\r\n            </h1>\r\n          );\r\n        }}        \r\n      />\r\n  );\r\n};\r\n\r\nexport default TypingEffect;","export default __webpack_public_path__ + \"static/media/hanguler-web.880d9ece.PNG\";","import React, {Component} from 'react';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport hanguler from \"../resources/hanguler-web.PNG\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n    return (\r\n        <Slider {...settings}  className=\"about-me\">\r\n          <div>\r\n            <h2>표현하는 즐거움</h2>\r\n            <p></p>\r\n          </div>\r\n          <div>\r\n            <img src={hanguler}/>\r\n          </div>\r\n          <div>\r\n            <h3>3</h3>\r\n          </div>\r\n        </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nconst ImageCard = ( {img, title, period, tech, role, description, link} ) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <>\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"160\"\r\n          image={img}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n            {role}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            개발기간: {period}\r\n          </Typography>\r\n          <br/>\r\n          <Typography variant=\"body3\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            <br/>{tech}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" href={link}>\r\n          Learn more\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n    <br/><br/></>\r\n  );\r\n}\r\nexport default ImageCard;","export default __webpack_public_path__ + \"static/media/twitter.2eb9ed4a.PNG\";","export default __webpack_public_path__ + \"static/media/mask-detector.c8293c95.png\";","export default __webpack_public_path__ + \"static/media/auto-schedule-updater.3781308b.PNG\";","import React from 'react';\r\nimport Card from './Card';\r\nimport hanguler from \"../resources/hanguler-web.PNG\";\r\nimport twitter from \"../resources/twitter.PNG\";\r\nimport mask from \"../resources/mask-detector.png\";\r\nimport scheduler from \"../resources/auto-schedule-updater.PNG\";\r\n\r\nconst Project = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <p className=\"title\"> 프로젝트 목록 </p>\r\n      <Card \r\n        img={scheduler}\r\n        title=\"자동 일정 업데이트 어플\"\r\n        period=\"21.02 - 현재 (진행중)\"\r\n        tech=\"#Python #Android Studio(Java), #Nodejs, #Express, #Mongodb, #Mongoose #Jira #Figma\"\r\n        role=\"NLP 패키지 구축(50%), DB 구축 및 서버 개발\"\r\n        description=\"한국어 자연어처리 라이브러리를 활용한 장소 관련 개체명(단어) 추출 패키지 개발. 해당 패키지를 연동하여 대화 중 일정 관련 데이터를 추출해 자동으로 일정에 업데이트하는 안드로이드 앱 제작\"\r\n        link=\"https://github.com/gyuree-kim/auto-schedule-updater\"\r\n      />\r\n      <Card \r\n        img={twitter}\r\n        title=\"트위터 핵심 기능 클론 코딩\"\r\n        period=\"21.01 - 21.02\"\r\n        tech=\"#Reactjs #firebase\"\r\n        description=\"노마드 아카데미 강의를 바탕으로 React 학습. 일반 User Auth 및 소셜 로그인 연동. 텍스트와 이미지를 업로드 할 수 있는 트위터의 실시간 대화(트윗) 기능 구현.\"\r\n        link=\"https://github.com/gyuree-kim/twitter-clone-coding\"\r\n      />\r\n      <Card \r\n        img={hanguler}\r\n        title=\"일대일 전화 한국어 예약 웹\"\r\n        period=\"20.08 - 21.01\"\r\n        tech=\"#Bitbucket, #AWS, #Jira, #confluence, #wordpress, #html, #css\"\r\n        role=\"창업멤버 및 개발 PM\"\r\n        description=\"경영팀 및 디자인팀과의 웹 구축 관련 의사결정 리드. production, develop으로 서버 관리 및 Jira 티켓별 태스크 관리\r\n        일부 페이지의 퍼블리싱 담당. \r\n        개발 소스 관리 및 AWS EB 자동 배포를 위한 Bitbucket 파이프라인 구축 일부 참여.\r\n        \"\r\n        link=\"http://www.hangulers.com\"\r\n      />\r\n      <Card \r\n        img= {mask}\r\n        title=\"마스크 감지 및 얼굴 인식 어플\"\r\n        period=\"20.07 - 20.08\"\r\n        tech=\"#Android Studio(Java), #Tensorflow, #Nodejs\"\r\n        role=\"프론트엔드 개발(30%)\"\r\n        description=\"마스크 감지와 얼굴 인식을 위한 오픈 소스 모델을 활용해 어플 내 카메라가 마스크를 착용하지 않은 사람을 발견시 알림 소리를 발생시킴. 등록된 얼굴 정보가 있다면 해당 데이터를 활용해 tts api로 음성 출력.\"\r\n        link=\"https://github.com/jinh0290/MadCamp-week3\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"contact\">\r\n      {/* <p className=\"title\"> Contact</p> */}\r\n      <p> Contact: gyuree.kim.dev@gmail.com</p> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","import Typer from './components/Typer';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Project';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n      <header className=\"header\">\n        <Typer/>\n      </header>\n      <AboutMe/>\n      <Project/>\n      <Contact/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}